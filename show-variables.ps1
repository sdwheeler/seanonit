$automatic = @(
    '$'
    '?'
    '^'
    '_'
    'args'
    'ConsoleFileName'
    'EnabledExperimentalFeatures'
    'Error'
    'Event'
    'EventArgs'
    'EventSubscriber'
    'ExecutionContext'
    'false'
    'foreach'
    'HOME'
    'Host'
    'input'
    'IsCoreCLR'
    'IsLinux'
    'IsMacOS'
    'IsWindows'
    'LASTEXITCODE'
    'Matches'
    'MyInvocation'
    'NestedPromptLevel'
    'null'
    'PID'
    'PROFILE'
    'PSBoundParameters'
    'PSCmdlet'
    'PSCommandPath'
    'PSCulture'
    'PSDebugContext'
    'PSEdition'
    'PSHOME'
    'PSItem'
    'PSScriptRoot'
    'PSSenderInfo'
    'PSUICulture'
    'PSVersionTable'
    'PWD'
    'Sender'
    'ShellId'
    'StackTrace'
    'switch'
    'this'
    'true'
)
$preference = @(
    'ConfirmPreference'
    'DebugPreference'
    'ErrorActionPreference'
    'ErrorView'
    'FormatEnumerationLimit'
    'InformationPreference'
    'LogCommandHealthEvent'
    'LogCommandLifecycleEvent'
    'LogEngineHealthEvent'
    'LogEngineLifecycleEvent'
    'LogProviderHealthEvent'
    'LogProviderLifecycleEvent'
    'MaximumHistoryCount'
    'OFS'
    'OutputEncoding'
    'ProgressPreference'
    'PSDefaultParameterValues'
    'PSEmailServer'
    'PSModuleAutoLoadingPreference'
    'PSNativeCommandArgumentPassing'
    'PSNativeCommandUseErrorActionPreference'
    'PSSessionApplicationName'
    'PSSessionConfigurationName'
    'PSSessionOption'
    'PSStyle'
    'Transcript'
    'VerbosePreference'
    'WarningPreference'
    'WhatIfPreference'
)
$local = @(
    'local'
    'automatic'
    'preference'
)
Get-Variable | Where-Object {
    $_.Name -NotIn $automatic -and
    $_.Name -NotIn $preference -and
    $_.Name -NotIn $local
}